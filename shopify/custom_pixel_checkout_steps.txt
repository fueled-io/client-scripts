((fueledConfig) => {
  function loadScript(src) {
    const script = document.createElement("script");
    script.src = src;
    document.head.appendChild(script);
  }

  loadScript(`https://www.googletagmanager.com/gtag/js?id=${fueledConfig.gTarget}`);
  loadScript(`https://cdn-client.fueled.io/fueled-client-1.6.2.min.js`);

  window.dataLayer = window.dataLayer || [];
  function gtag() {
    window.dataLayer.push(arguments);
  }

  gtag("js", new Date());
  gtag("config", fueledConfig.gTarget, { send_page_view: false });
  window.gtag = gtag;

  const status = {
    fueledReady: false,
    ga4Ready: false,
    setStatus(property) {
      this[property] = true;

      if (Object.values(this).every((item) => item)) {
        loadClient();
      }
    },
  };

  const ga4IntervalCheckId = setInterval(() => {
    if (
      window.google_tag_manager &&
      window.google_tag_manager.dataLayer &&
      window.google_tag_manager.dataLayer.gtmLoad &&
      window.google_tag_manager.dataLayer.gtmDom
    ) {
      status.setStatus("ga4Ready");

      clearInterval(ga4IntervalCheckId);
    }
  }, 500);

  window.addEventListener("fueled-ready", function () {
    status.setStatus("fueledReady");
  });

  async function loadClient() {
    if (fueledConfig.gTarget) {
      await window.fueledClient.loadGA4(fueledConfig.gTarget);
    }

    if (fueledConfig.analyticsWriteKey) {
      await window.fueledClient.loadClient(
        fueledConfig.datahubUrl,
        fueledConfig.analyticsWriteKey,
        {
          gTarget: fueledConfig.gTarget,
        }
      );
    }
  }

  dataLayer.fueled = {};

  const getFormattedProducts = (lineItems) =>
    lineItems.map((item) => ({
      productId: item.variant.product.id,
      sku: item.variant.sku,
      variant: item.variant.id,
      price: item.variant.price.amount,
      category: item.variant.product.category,
      brand: item.variant.product.vendor,
      name: item.title,
      imageUrl: item.variant.image.src,
    }));

  analytics.subscribe("checkout_contact_info_submitted", (event) => {
    window.fueledClient.checkoutContactInfoSubmitted({
      page_location: event.context.window.location.href,
      page_title: event.context.document.title,
      checkout_id: event.data.checkout.token,
      currency: event.data.checkout.currencyCode,
      subtotal: event.data.checkout.subtotalPrice.amount,
      total: event.data.checkout.totalPrice.amount,
      tax: event.data.checkout.totalTax.amount,
      products: getFormattedProducts(event.data?.checkout?.lineItems),
    });
  });
  analytics.subscribe("checkout_address_info_submitted", (event) => {
    window.fueledClient.checkoutAddressInfoSubmitted({
      page_location: event.context.window.location.href,
      page_title: event.context.document.title,
      checkout_id: event.data.checkout.token,
      currency: event.data.checkout.currencyCode,
      subtotal: event.data.checkout.subtotalPrice.amount,
      total: event.data.checkout.totalPrice.amount,
      tax: event.data.checkout.totalTax.amount,
      products: getFormattedProducts(event.data?.checkout?.lineItems),
    });
  });
  analytics.subscribe("checkout_shipping_info_submitted", (event) => {
    window.fueledClient.checkoutShippingInfoSubmitted({
      page_location: event.context.window.location.href,
      page_title: event.context.document.title,
      checkout_id: event.data.checkout.token,
      currency: event.data.checkout.currencyCode,
      subtotal: event.data.checkout.subtotalPrice.amount,
      total: event.data.checkout.totalPrice.amount,
      tax: event.data.checkout.totalTax.amount,
      products: getFormattedProducts(event.data?.checkout?.lineItems),
    });
  });
  analytics.subscribe("payment_info_submitted", (event) => {
    window.fueledClient.paymentInfoSubmitted({
      page_location: event.context.window.location.href,
      page_title: event.context.document.title,
      checkout_id: event.data.checkout.token,
      currency: event.data.checkout.currencyCode,
      subtotal: event.data.checkout.subtotalPrice.amount,
      total: event.data.checkout.totalPrice.amount,
      tax: event.data.checkout.totalTax.amount,
      products: getFormattedProducts(event.data?.checkout?.lineItems),
    });
  });
})({
  datahubUrl: "https://datahub.fueled.io",
  frontendStorageUrl: "https://frontend-storage.fueled.io",
  analyticsWriteKey: "[[PROD_ANALYTICS_WRITE_KEY]]",
  gTarget: "[[PROD_GTARGET]]",
});
